parameters:
  - name: "BuildConfiguration"
    type: string
    default: "release"
  - name: "BuildPlatform"
    type: string
    default: "x86"
  - name: OfficialBuild
    type: boolean
    default: false

jobs:
- job: Build_ABI_Tool
  displayName: Build Binaries
  pool:
    type: windows

  variables:
    ob_outputDirectory: '$(Build.SourcesDirectory)\out'
    ob_artifactSuffix: ${{ parameters.BuildConfiguration }}_${{ parameters.BuildPlatform }}
    StagingFolder: $(ob_outputDirectory)

  steps:

  - task: NuGetToolInstaller@1
    displayName: Use NuGet 6.7
    continueOnError: True
    inputs:
      versionSpec: 6.7

  - task: CmdLine@2
    displayName: Build Tools
    inputs: 
      script: >
        if "%VSCMD_VER%"=="" (
            pushd c:
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" >nul 2>&1
            popd
        )

        build.cmd -v -b ${{ parameters.BuildConfiguration }} -f --build-version "$(Build.BuildNumber)" abi make_abiwinrt_nupkg
      workingDirectory: $(Build.SourcesDirectory)\src\scripts\windows
      failOnStderr: true

  - task: CopyFiles@2
    displayName: Stage abi.*
    inputs:
      SourceFolder: $(Build.SourcesDirectory)\_build\Windows\${{ parameters.BuildPlatform }}\${{ parameters.BuildConfiguration }}\tool\abi
      Contents: >-
        abi.exe

        abi.pdb
      TargetFolder: $(ob_outputDirectory)\abi

  - task: onebranch.pipeline.signing@1
    displayName: 'ðŸ”’ Onebranch Signing for abi.exe'
    condition: eq(${{ parameters.OfficialBuild }}, 'true')
    inputs:
      command: sign
      signing_profile: external_distribution
      files_to_sign: '**/*.dll;**/*.exe'
      search_root: $(ob_outputDirectory)\abi
